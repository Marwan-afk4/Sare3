## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/send-otp
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'send otp to phone'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      phone:
        name: phone
        description: "The user's phone number."
        required: true
        example: '+201012345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      phone: '+201012345678'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "OTP sent successfully"
             }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
               "message": "The phone field is required."
             }
        headers: []
        description: 'Validation error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/check-otp
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verify phone OTP and optionally bind to email'
      description: |-
        This endpoint verifies the OTP sent to the user's phone. If an email is included and exists,
        it will bind the phone number to the user with that email. Otherwise, it creates a new user with the phone number.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      phone:
        name: phone
        description: "The user's phone number."
        required: true
        example: '+201012345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      code:
        name: code
        description: 'The OTP code received by the user.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "nullable The user's email (must already exist if provided)."
        required: false
        example: test@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      phone: '+201012345678'
      code: '123456'
      email: test@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "OTP verified successfully",
            "token": "1|a1b2c3d4e5f6g7h8"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "OTP verification failed, try again"
          }
        headers: []
        description: 'OTP failure'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Email not found"
          }
        headers: []
        description: 'Email not found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/send-email-otp
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send email verification code'
      description: |-
        This endpoint sends a 6-digit verification code to the user's email.
        It links the email to an existing user by phone if provided.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      phone:
        name: phone
        description: "nullable The user's phone number (must exist in the users table)."
        required: false
        example: '+201012345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      email:
        name: email
        description: "nullable The user's email address (must be unique)."
        required: false
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      phone: '+201012345678'
      email: user@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Email verification code sent successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "The email field must be a valid email address."
          }
        headers: []
        description: 'Validation error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/verify-email-otp
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verify email with code'
      description: |-
        This endpoint verifies the user's email using the provided 6-digit code.
        The email must be unique and the phone must exist in the users table (if provided).
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      phone:
        name: phone
        description: "nullable The user's phone number (must exist in the users table)."
        required: false
        example: '+201012345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      email:
        name: email
        description: "The user's email address (must be unique)."
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      code:
        name: code
        description: "The 6-digit verification code sent to the user's email."
        required: true
        example: 123456
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      phone: '+201012345678'
      email: user@example.com
      code: 123456
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Email verified successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Email verification code is incorrect"
          }
        headers: []
        description: 'Invalid code'
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "The email field is required."
          }
        headers: []
        description: 'Validation error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/post-name
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update user's name"
      description: "This endpoint updates the user's name based on their phone number."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      phone:
        name: phone
        description: "The user's phone number. Must exist in the database."
        required: true
        example: '+201012345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name to be set for the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      phone: '+201012345678'
      name: 'John Doe'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Name updated successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "The name field is required."
          }
        headers: []
        description: 'Validation error'
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "User not found"
          }
        headers: []
        description: 'User not found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/email-verfication
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send email verification code (first step)'
      description: 'This endpoint starts the email verification process. It sends a 6-digit verification code to the provided email.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "nullable The user's email. Must be unique if not already registered."
        required: false
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      email: user@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Go and check your email to verify your account , the code will expire after 5 min"
          }
        headers: []
        description: 'New user or unverified email'
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "The email has already been taken."
          }
        headers: []
        description: 'Validation error'
        custom: []
      -
        status: 409
        content: |-
          {
            "message": "This email is already registered"
          }
        headers: []
        description: 'Email already verified'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/verify-email
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verify email using code (first step)'
      description: "This endpoint verifies the user's email using the code sent previously."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address to verify. Must already exist in the users table.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      code:
        name: code
        description: 'The 6-digit verification code sent to the email.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: user@example.com
      code: '123456'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Email verified successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "error": "Invalid verification code."
          }
        headers: []
        description: 'Invalid code'
        custom: []
      -
        status: 422
        content: |-
          {
            "email": [
              "The selected email is invalid."
            ],
            "code": [
              "The code field is required."
            ]
          }
        headers: []
        description: 'Validation error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/google-auth
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Authenticate using Google'
      description: 'This endpoint allows users to authenticate or register using their Google account. You must send a valid `id_token` obtained from Google Sign-In.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id_token:
        name: id_token
        description: 'The ID token received from Google.'
        required: true
        example: ya29.a0AfH6SMC...xyz
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      id_token: ya29.a0AfH6SMC...xyz
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Google account registered successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Invalid Google ID token"
          }
        headers: []
        description: 'Invalid token'
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "The id token field is required."
          }
        headers: []
        description: 'Validation error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
